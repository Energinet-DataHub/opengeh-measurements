[project]
name = "geh_calculated_measurements"
version = "0.1.0"
description = "A combined package for capacity settlement and electrical heating."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "azure-core==1.32.0",
    "azure-monitor-opentelemetry==1.6.4",
    "configargparse==1.7.0",
    "delta-spark==3.2.0",
    "geh_common @ git+https://github.com/Energinet-DataHub/opengeh-python-packages@geh_common_4.1.0",
    "pydantic-settings>=2.7.1",
    "pyspark==3.5.1",
    "python-dateutil==2.8.2",
    "tomli>=2.2.1",
]

[project.scripts]
execute_electrical_heating = "geh_calculated_measurements.electrical_heating.entry_point:execute"
execute_capacity_settlement = "geh_calculated_measurements.capacity_settlement.entry_point:execute"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
    "mypy>=1.14.1",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.4",
    "ruff>=0.9.1",
    "databricks-sdk>=0.41.0",
]

[tool.pytest.ini_options]
# -s ensures that print("<text>") is written to output.
addopts = "--cov-report=term --cov-report=xml:coverage.xml --cov=geh_calculated_measurements -ra -vv -s"

[tool.coverage.report]
fail_under = 0
show_missing = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]

[tool.ruff]
line-length = 120
show-fixes = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["D", "D401", "E", "F", "I", "T201", "UP"]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D106",
    "D107",
    "D417",
    "E501",
    "UP006",
    "UP007",
    "UP035",
]
exclude = ["notebooks/*"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]

[tool.ruff.lint.pydocstyle]
convention = "google"
