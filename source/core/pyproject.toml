[project]
name = "core"
version = "0.1.0"
description = "Streaming to the silver layer"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pydantic-settings>=2.7.1",
    "geh_common @ git+https://git@github.com/Energinet-DataHub/opengeh-python-packages@geh_common_5.5.0#subdirectory=source/geh_common",
    "pydantic>=2.10.6",
]

[project.scripts]
migrate = "core.entry_points:migrate"
stream_calculated_measurements = "core.silver.entry_points:stream_calculated_measurements"
stream_silver_to_gold_measurements = "core.gold.entry_points:stream_silver_to_gold_measurements"
notify_transactions_persisted = "core.silver.entry_points:notify_transactions_persisted"
ingest_submitted_transactions = "core.bronze.entry_points:ingest_submitted_transactions"
stream_submitted_transactions_to_silver = "core.silver.entry_points:stream_submitted_transactions"
migrate_time_series_from_migrations = "core.bronze.entry_points:migrate_time_series_from_migrations_to_measurements"
stream_migrated_transactions_to_silver = "core.silver.entry_points:stream_migrated_transactions"

[dependency-groups]
dev = [
    "commitizen>=4.1.0",
    "mypy>=1.14.1",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.4",
    "ruff>=0.9.1",
    "pydantic>=2.10.6",
    "azure-identity>=1.20.0",
    "azure-eventhub>=5.14.0",
    "pytest-bdd>=8.1.0",
    "pytest-bdd-report>=1.0.1",
    "protobuf>=6.30.1",
    "pytest-mock>=3.14.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
# -s ensures that print("<text>") is written to output.
addopts = [
    "--import-mode=importlib",
    "--cov-report=term",
    "--cov-report=xml:coverage.xml",
    "--cov=core",
    "-ra",
    "-vv",
    "-s",
]

[tool.coverage.report]
fail_under = 0
show_missing = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]

[tool.ruff]
line-length = 120
show-fixes = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["D", "D401", "E", "F", "I", "T201", "UP"]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D106",
    "D107",
    "D417",
    "E501",
    "UP006",
    "UP007",
    "UP035",
]
exclude = ["notebooks/*"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]

[tool.ruff.lint.pydocstyle]
convention = "google"
