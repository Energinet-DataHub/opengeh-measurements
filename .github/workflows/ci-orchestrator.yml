name: CI orchestrator

on:
  pull_request:
    branches:
      - main
  merge_group:
    types: [checks_requested]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  #
  # Compile Protobuf Contracts
  #
  ci_bronze_contracts:
    name: Compile Protobuf Contracts
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check if contract files has changed
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            is_changed:
              - source/bronze/src/opengeh_bronze/infrastructure/contracts/**
      - name: Compile protobuf descriptor files
        uses: ./.github/actions/compile-proto
        if: ${{ steps.changes.outputs.is_changed == 'true' }}
        with:
          path: source/bronze/src/opengeh_bronze/infrastructure/contracts

  #
  # Reusable CI
  #
  ci_reusable:
    name: Continuous Integration
    uses: ./.github/workflows/reusable-ci.yml
    with:
      packages_directory: source
      core_regex: opengeh_bronze|opengeh_silver|opengeh_gold
    secrets:
      dh3serviceaccount_privatekey: ${{ secrets.dh3serviceaccount_privatekey }}

  #
  # Branch policy status check
  #
  allow_merge_ci_orchestrator:
    runs-on: ubuntu-24.04
    needs: [ci_bronze_contracts, ci_reusable]
    if: |
      always()
    steps:
      - name: Verify if merge is allowed
        run: |
          echo "${{ toJSON(needs) }}"
          if [[ ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }} = true ]]; then
              echo "Failed"
              exit 1
          fi
